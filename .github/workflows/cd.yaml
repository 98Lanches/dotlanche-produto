name: CD
on:
  push:
    branches: 
      - main
    tags:
      - v*

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  AWS_REGION: us-east-1
  AWS_CLUSTER_NAME: ${{ secrets.AWS_CLUSTER_NAME }}
  POSTGRESQL_CONNECTIONSTRING: ${{ secrets.POSTGRESQL_CONNECTIONSTRING }} 

jobs:
  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PUBLISH_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          atcorrea/dotlanche-produto
        tags: |
          type=sha

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./src/Drivers/Dotlanche.Produto.WebApi/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        
    - uses: cschleiden/replace-tokens@v1
      name: Replace tokens in kubernetes files
      with:
        files: '[".kubernetes/*.yaml"]'
      env:
        APP_IMAGE: ${{ steps.meta.outputs.tags }}
        CONNECTION_STRING: ${{ secrets.POSTGRESQL_CONNECTIONSTRING}}

    - name: AWS Cli login
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig for EKS
      run: |
          aws eks update-kubeconfig --name ${{ env.AWS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

    - name: Apply kubernetes manifests
      run: |
        kubectl apply -f ./.kubernetes/secrets.yaml
        kubectl apply -f ./.kubernetes/deployment.yaml
        kubectl apply -f ./.kubernetes/service.yaml
        kubectl apply -f ./.kubernetes/hpa.yaml